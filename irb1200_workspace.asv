clc;
clear;
close all;

% Load symbolic transformations
run('irb1200_ForwardKinematics.m');

syms a2 a3  
assume([a2 a3], 'real');

%% Link lengths and DH distances in meters
d_vals = [0.399, 0, 0, 0.351, 0.082];  % d1, d2=0, d3=0, d4, d6
a_vals = [0, 0.35, 0.42];              % a1=0, a2, a3 (in meters)

%% Define joint ranges (degrees) according to ABB IRB 1200 limits
theta1_range = -170:30:170;
theta2_range = -100:20:135;
theta3_range = -200:20:70;

% Fix the rest to 0 for now
theta4_fixed = 0;
theta5_fixed = 0;
theta6_fixed = 0;

% Initialize workspace point cloud
workspace_points = [];

%% Sample configurations (discretized)
for t1 = theta1_range
    for t2 = theta2_range
        for t3 = theta3_range
            joint_angles_deg = [t1, t2, t3, theta4_fixed, theta5_fixed, theta6_fixed];
            joint_angles_rad = deg2rad(joint_angles_deg);

            % Substitute values into symbolic transformation matrices
            T01_num = double(subs(T01, [theta1, d1], [joint_angles_rad(1), d_vals(1)]));
            T12_num = double(subs(T12, [theta2, d2, a2], [joint_angles_rad(2), d_vals(2), a_vals(2)]));
            T23_num = double(subs(T23, [theta3, d3, a3], [joint_angles_rad(3), d_vals(3), a_vals(3)]));
            T34_num = double(subs(T34, [theta4, d4], [joint_angles_rad(4), d_vals(4)]));
            T45_num = double(subs(T45, theta5, joint_angles_rad(5)));
            T56_num = double(subs(T56, [theta6, d6], [joint_angles_rad(6), d_vals(5)]));

            % Compute forward kinematics
            T06 = T01_num * T12_num * T23_num * T34_num * T45_num * T56_num;
            p = T06(1:3, 4);
            workspace_points = [workspace_points, p];
        end
    end
end

% Extract x, y, z coordinates
x = workspace_points(1, :);
y = workspace_points(2, :);
z = workspace_points(3, :);

%% Isometric View
figure;
scatter3(x, y, z, 10, 'filled'); hold on;

% Plot a sample pose for the robot
joint_angles_deg = [0, 0, 0, 0, 0, 0];
origins = compute_origins(joint_angles_deg);
plot3(origins(1, :), origins(2, :), origins(3, :), 'k-o', 'LineWidth', 2);

view(45, 30); axis equal; grid on;
xlabel('X [m]');
ylabel('Y [m]');
zlabel('Z [m]');
title('Isometric View: Robot Pose + Workspace');

%% X-Y View
figure;
scatter(x, y, 10, 'filled');
axis equal; grid on;
xlabel('X [m]');
ylabel('Y [m]');
title('Top View (X-Y) of Workspace');

%% X-Z View
figure;
scatter(x, z, 10, 'filled');
axis equal; grid on;
xlabel('X [m]');
ylabel('Z [m]');
title('Front View (X-Z) of Workspace');

%% Y-Z View
figure;
scatter(y, z, 10, 'filled');
axis equal; grid on;
xlabel('Y [m]');
ylabel('Z [m]');
title('Side View (Y-Z) of Workspace');
